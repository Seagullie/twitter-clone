Lot's of features are implemented, but some of them don't work as of now
Editing is one of them. It's supposed to open a form on a new page

The link is fine. So we gotta check the code that is rendered for tweeet.edit view 
tweeet.edit renders form partial and two nav links 

Error message is: "NoMethodError in Tweeets#edit. <%= simple_form_for (@tweet) do |f| %>"
Uhh, does it try to find some other method in edit method of Tweeets controller?
Or is it referencing @tweet?
(in Ruby it's difficult to differentiate between method and attribute, cause no parenthesis are needed to invoke a callable)
I will try to add some code to .edit
Added @tweet = Tweeet.find(params[:id])
And that helped. Nice. Apparenly, it's the attribute that was missing (and it was called 'method' by stack trace)
~
Now we need to style it up a bit.
The main thing we need to do here is to center the form and make it so that it doesn't take up all the width
Done


Read tweet page also needs some additional styling. I would like to reuse code that i used for feed
and we can do that thanks to partials, but i will need to add some additional logic to hide control panel 
We will need to pass some data to the partial. You can do so by assigning additional attributes to render 
And you can access them this way: by just referencing what was passed in 
Logic done. But the tweeet on read page is too wide. And i don't get it why the form on edit page is fine while 
tweet on show page is too wide
Probably cause form is inline-block, while div is block. And blocks are greedy by default
Specified width: fit-content. Now it looks better and is centered. Don't know how. fit-content would make it so that 
no free space is available for the content, just the minimum. Thus, alignment would be impossible :shrug:

Fixing: done. Nice 
Now on to the new features.
Would be cool to make a profile anayltics. Stuff like number of tweets, followers and following
Ok, how do we make it look like twitter profile panel?
A flexbox for the three params and a div above for name and handle
Done

Gravatars... should i really use it?

Would be cool to implement visiting other people's profiles
We have users controller taken by devise...
But i will try to create one and lookup users by url with handle in it
But i don't know how to declare a route that can handle custom subroutes
Here is the link: https://guides.rubyonrails.org/routing.html
This one should be it: get '/patients/:id', to: 'patients#show', as: 'patient'
^the symbol can be replaced with whatever you want
Ok, routing done. Now i need to pull up the data relevant to the handle passed
Managed to pull it up with User.find_by
One of the final steps is to render the profile
But if the handle matches the current_user handle, we shall simply redirect to root
Done
Can i render views of other controllers? SO says yes. My code says no.
// if u use absolute path, partials should have underscore at the start ## that helps
I want to reuse the feed view but we need to modify it first. As of now, all parts of index are hooked up to 
the user that is logged in. We need to convert such dependencies into view params
But the thing is that lots of the views are hooked up to their controller's corresponding methods and
can access vars declared there (or on controller in general, i'm not sure)
All the vars are tweet related. Since user and tweet are related models, you can get user tweets by referencing user
But we need to hoist all the dependencies of the views up to customize them
K. Done. But it felt kinda hacky. But looks good


